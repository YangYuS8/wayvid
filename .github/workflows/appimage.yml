name: Build AppImage

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.3.0)'
        required: true
        default: '0.3.0'

jobs:
  build-appimage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libmpv-dev \
            libwayland-dev \
            libgl1-mesa-dev \
            libegl1-mesa-dev \
            upx-ucl \
            imagemagick \
            fuse \
            libfuse2
      
      - name: Download appimagetool
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage \
            -O /tmp/appimagetool
          chmod +x /tmp/appimagetool
          sudo mv /tmp/appimagetool /usr/local/bin/appimagetool
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi
      
      - name: Build AppImage
        run: |
          cd packaging/appimage
          chmod +x build-appimage.sh
          ./build-appimage.sh ${{ steps.version.outputs.VERSION }}
      
      - name: Test AppImage
        run: |
          cd packaging/appimage
          chmod +x test-appimage.sh
          ./test-appimage.sh build/wayvid-${{ steps.version.outputs.VERSION }}-x86_64.AppImage
      
      - name: Generate checksums
        run: |
          cd packaging/appimage/build
          sha256sum wayvid-*.AppImage > SHA256SUMS
          cat SHA256SUMS
      
      - name: Upload AppImage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: wayvid-appimage
          path: |
            packaging/appimage/build/wayvid-*.AppImage
            packaging/appimage/build/SHA256SUMS
      
      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packaging/appimage/build/wayvid-*.AppImage
            packaging/appimage/build/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
